[gd_resource type="VisualShader" load_steps=24 format=3 uid="uid://dtg3t52t3kle7"]

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_l3aop"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="Gradient" id="Gradient_s2evw"]
colors = PackedColorArray(0, 1, 0, 1, 1, 0, 0, 1)

[sub_resource type="FastNoiseLite" id="FastNoiseLite_ftq2x"]
noise_type = 3
frequency = 0.009

[sub_resource type="NoiseTexture2D" id="NoiseTexture2D_x8kde"]
seamless = true
color_ramp = SubResource("Gradient_s2evw")
noise = SubResource("FastNoiseLite_ftq2x")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_o4d3c"]
texture = SubResource("NoiseTexture2D_x8kde")

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_0m048"]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_lk0ca"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_vli6j"]
default_input_values = [0, 1.0, 1, 0.2, 2, 0.0]
op_type = 0

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_y83ql"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_u6rdo"]
input_name = "time"

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_paelp"]
default_input_values = [0, 0.0, 1, 0.05]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id="VisualShaderNodeColorConstant_qbk0s"]
constant = Color(0.9, 0.9, 0.9, 1)

[sub_resource type="VisualShaderNodeGlobalExpression" id="VisualShaderNodeGlobalExpression_m01vy"]
size = Vector2(1080, 320)
expression = "const vec3 uv1_scale = vec3(1.0, 1.0, 1.0);
const vec3 uv1_offset = vec3(0.0, 0.0, 0.0);

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	MODELVIEW_MATRIX = VIEW_MATRIX * mat4(vec4(normalize(cross(vec3(0.0, 1.0, 0.0), INV_VIEW_MATRIX[2].xyz)), 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(normalize(cross(INV_VIEW_MATRIX[0].xyz, vec3(0.0, 1.0, 0.0))), 0.0), MODEL_MATRIX[3]);
	MODELVIEW_MATRIX = MODELVIEW_MATRIX * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0),vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
	MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
}"

[sub_resource type="VisualShaderNodeFloatConstant" id="VisualShaderNodeFloatConstant_yan3n"]
constant = 2.0

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_nbmn1"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 5

[sub_resource type="Gradient" id="Gradient_8kue1"]
offsets = PackedFloat32Array(0, 0.172414, 0.454023, 0.944444)
colors = PackedColorArray(0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_llwge"]
gradient = SubResource("Gradient_8kue1")
fill_from = Vector2(1, 0)
fill_to = Vector2(1, 1)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_yxe81"]
texture = SubResource("GradientTexture2D_llwge")

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_g3paj"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeFloatOp" id="VisualShaderNodeFloatOp_b1y17"]
default_input_values = [0, 0.0, 1, 2.0]
operator = 5

[sub_resource type="Gradient" id="Gradient_nloyj"]
offsets = PackedFloat32Array(0, 0.137931, 0.885057, 1)
colors = PackedColorArray(0, 0, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0, 0, 0, 1)

[sub_resource type="GradientTexture2D" id="GradientTexture2D_lhjqo"]
gradient = SubResource("Gradient_nloyj")
fill_from = Vector2(1, 0)
fill_to = Vector2(0, 0)

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_pfr80"]
texture = SubResource("GradientTexture2D_lhjqo")

[resource]
code = "shader_type spatial;
render_mode blend_add, depth_draw_opaque, cull_disabled, diffuse_lambert, specular_schlick_ggx, depth_prepass_alpha, shadows_disabled;

uniform sampler2D tex_frg_6;
uniform sampler2D tex_frg_9;
uniform sampler2D tex_frg_11;


// GlobalExpression:0
	const vec3 uv1_scale = vec3(1.0, 1.0, 1.0);
	const vec3 uv1_offset = vec3(0.0, 0.0, 0.0);
	
	void vertex() {
		UV=UV*uv1_scale.xy+uv1_offset.xy;
		MODELVIEW_MATRIX = VIEW_MATRIX * mat4(vec4(normalize(cross(vec3(0.0, 1.0, 0.0), INV_VIEW_MATRIX[2].xyz)), 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(normalize(cross(INV_VIEW_MATRIX[0].xyz, vec3(0.0, 1.0, 0.0))), 0.0), MODEL_MATRIX[3]);
		MODELVIEW_MATRIX = MODELVIEW_MATRIX * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0),vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
		MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
	}

void fragment() {
// ColorConstant:19
	vec4 n_out19p0 = vec4(0.900000, 0.900000, 0.900000, 1.000000);


// Texture2D:6
	vec4 n_out6p0 = texture(tex_frg_6, UV);


// FloatOp:4
	float n_in4p1 = 2.00000;
	float n_out4p0 = pow(n_out6p0.x, n_in4p1);


// Texture2D:9
	vec4 n_out9p0 = texture(tex_frg_9, UV);


// FloatOp:8
	float n_in8p1 = 2.00000;
	float n_out8p0 = pow(n_out9p0.x, n_in8p1);


// VectorOp:7
	vec2 n_out7p0 = vec2(n_out4p0) * vec2(n_out8p0);


// Input:12
	vec2 n_out12p0 = UV;


// VectorCompose:14
	float n_in14p0 = 1.00000;
	float n_in14p1 = 0.20000;
	vec2 n_out14p0 = vec2(n_in14p0, n_in14p1);


// Input:17
	float n_out17p0 = TIME;


// FloatOp:18
	float n_in18p1 = 0.05000;
	float n_out18p0 = n_out17p0 * n_in18p1;


// VectorOp:16
	vec2 n_out16p0 = n_out14p0 + vec2(n_out18p0);


// VectorOp:13
	vec2 n_out13p0 = n_out12p0 + n_out16p0;


// Texture2D:11
	vec4 n_out11p0 = texture(tex_frg_11, n_out13p0);


// VectorOp:10
	vec2 n_out10p0 = n_out7p0 * vec2(n_out11p0.xy);


// FloatConstant:20
	float n_out20p0 = 2.000000;


// Output:0
	ALBEDO = vec3(n_out19p0.xyz);
	ALPHA = n_out10p0.x;
	EMISSION = vec3(n_out20p0);
	BACKLIGHT = vec3(n_out19p0.xyz);


}
"
graph_offset = Vector2(-985.445, -234.227)
modes/blend = 1
modes/cull = 2
flags/depth_prepass_alpha = true
flags/shadows_disabled = true
nodes/fragment/0/position = Vector2(860, 200)
nodes/fragment/2/node = SubResource("VisualShaderNodeGlobalExpression_m01vy")
nodes/fragment/2/position = Vector2(-1160, 140)
nodes/fragment/2/size = Vector2(1080, 320)
nodes/fragment/2/input_ports = ""
nodes/fragment/2/output_ports = ""
nodes/fragment/2/expression = "const vec3 uv1_scale = vec3(1.0, 1.0, 1.0);
const vec3 uv1_offset = vec3(0.0, 0.0, 0.0);

void vertex() {
	UV=UV*uv1_scale.xy+uv1_offset.xy;
	MODELVIEW_MATRIX = VIEW_MATRIX * mat4(vec4(normalize(cross(vec3(0.0, 1.0, 0.0), INV_VIEW_MATRIX[2].xyz)), 0.0), vec4(0.0, 1.0, 0.0, 0.0), vec4(normalize(cross(INV_VIEW_MATRIX[0].xyz, vec3(0.0, 1.0, 0.0))), 0.0), MODEL_MATRIX[3]);
	MODELVIEW_MATRIX = MODELVIEW_MATRIX * mat4(vec4(length(MODEL_MATRIX[0].xyz), 0.0, 0.0, 0.0),vec4(0.0, length(MODEL_MATRIX[1].xyz), 0.0, 0.0), vec4(0.0, 0.0, length(MODEL_MATRIX[2].xyz), 0.0), vec4(0.0, 0.0, 0.0, 1.0));
	MODELVIEW_NORMAL_MATRIX = mat3(MODELVIEW_MATRIX);
}"
nodes/fragment/4/node = SubResource("VisualShaderNodeFloatOp_nbmn1")
nodes/fragment/4/position = Vector2(-500, 480)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_yxe81")
nodes/fragment/6/position = Vector2(-1160, 480)
nodes/fragment/7/node = SubResource("VisualShaderNodeVectorOp_g3paj")
nodes/fragment/7/position = Vector2(-220, 480)
nodes/fragment/8/node = SubResource("VisualShaderNodeFloatOp_b1y17")
nodes/fragment/8/position = Vector2(-500, 720)
nodes/fragment/9/node = SubResource("VisualShaderNodeTexture_pfr80")
nodes/fragment/9/position = Vector2(-1160, 900)
nodes/fragment/10/node = SubResource("VisualShaderNodeVectorOp_l3aop")
nodes/fragment/10/position = Vector2(200, 480)
nodes/fragment/11/node = SubResource("VisualShaderNodeTexture_o4d3c")
nodes/fragment/11/position = Vector2(-220, 740)
nodes/fragment/12/node = SubResource("VisualShaderNodeInput_0m048")
nodes/fragment/12/position = Vector2(-1800, 1320)
nodes/fragment/13/node = SubResource("VisualShaderNodeVectorOp_lk0ca")
nodes/fragment/13/position = Vector2(-1160, 1320)
nodes/fragment/14/node = SubResource("VisualShaderNodeVectorCompose_vli6j")
nodes/fragment/14/position = Vector2(-1800, 1480)
nodes/fragment/16/node = SubResource("VisualShaderNodeVectorOp_y83ql")
nodes/fragment/16/position = Vector2(-1500, 1480)
nodes/fragment/17/node = SubResource("VisualShaderNodeInput_u6rdo")
nodes/fragment/17/position = Vector2(-2260, 1720)
nodes/fragment/18/node = SubResource("VisualShaderNodeFloatOp_paelp")
nodes/fragment/18/position = Vector2(-1800, 1720)
nodes/fragment/19/node = SubResource("VisualShaderNodeColorConstant_qbk0s")
nodes/fragment/19/position = Vector2(220, 200)
nodes/fragment/20/node = SubResource("VisualShaderNodeFloatConstant_yan3n")
nodes/fragment/20/position = Vector2(220, 340)
nodes/fragment/connections = PackedInt32Array(6, 0, 4, 0, 4, 0, 7, 0, 9, 0, 8, 0, 8, 0, 7, 1, 7, 0, 10, 0, 10, 0, 0, 1, 11, 0, 10, 1, 12, 0, 13, 0, 13, 0, 11, 0, 14, 0, 16, 0, 17, 0, 18, 0, 18, 0, 16, 1, 16, 0, 13, 1, 19, 0, 0, 0, 19, 0, 0, 18, 20, 0, 0, 5)
